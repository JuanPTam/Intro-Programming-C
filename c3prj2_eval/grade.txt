Grading at Sun Apr  7 22:12:22 UTC 2019
Compiling your code
rm test poker cards.o my-test-main.o *~
Makefile:10: recipe for target 'clean' failed
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 2: Trying hands with pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 4: Trying hands with 3 of a kind
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 5: Trying hands with straights
Valgrind returned an error status
==1868== Memcheck, a memory error detector
==1868== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1868== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1868== Command: ./test-eval inp.5.txt
==1868== Parent PID: 1867
==1868== 
==1868== Invalid read of size 8
==1868==    at 0x401923: is_straight_at (eval.c:162)
==1868==    by 0x40269A: describe_hand (test-eval.c:49)
==1868==    by 0x402A40: main (test-eval.c:116)
==1868==  Address 0x5208b70 is 0 bytes after a block of size 64 alloc'd
==1868==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1868==    by 0x401129: add_card_to (deck-c4.c:29)
==1868==    by 0x40325E: hand_from_string (input.c:49)
==1868==    by 0x4029C5: main (test-eval.c:110)
==1868== 
==1868== Invalid read of size 4
==1868==    at 0x401926: is_straight_at (eval.c:162)
==1868==    by 0x40269A: describe_hand (test-eval.c:49)
==1868==    by 0x402A40: main (test-eval.c:116)
==1868==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1868== 
==1868== 
==1868== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1868==  Access not within mapped region at address 0x0
==1868==    at 0x401926: is_straight_at (eval.c:162)
==1868==    by 0x40269A: describe_hand (test-eval.c:49)
==1868==    by 0x402A40: main (test-eval.c:116)
==1868==  If you believe this happened as a result of a stack
==1868==  overflow in your program's main thread (unlikely but
==1868==  possible), you can try to increase the size of the
==1868==  main thread stack using the --main-stacksize= flag.
==1868==  The main thread stack size used in this run was 8388608.
==1868== 
==1868== HEAP SUMMARY:
==1868==     in use at exit: 960 bytes in 22 blocks
==1868==   total heap usage: 138 allocs, 116 frees, 11,248 bytes allocated
==1868== 
==1868== LEAK SUMMARY:
==1868==    definitely lost: 0 bytes in 0 blocks
==1868==    indirectly lost: 0 bytes in 0 blocks
==1868==      possibly lost: 0 bytes in 0 blocks
==1868==    still reachable: 960 bytes in 22 blocks
==1868==         suppressed: 0 bytes in 0 blocks
==1868== Rerun with --leak-check=full to see details of leaked memory
==1868== 
==1868== For counts of detected and suppressed errors, rerun with: -v
==1868== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 6: Trying hands with flushes
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 7: Trying hands with full houses
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==1897== Memcheck, a memory error detector
==1897== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1897== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1897== Command: ./test-eval inp.8.txt
==1897== Parent PID: 1896
==1897== 
==1897== Invalid read of size 8
==1897==    at 0x401923: is_straight_at (eval.c:162)
==1897==    by 0x40269A: describe_hand (test-eval.c:49)
==1897==    by 0x402A60: main (test-eval.c:119)
==1897==  Address 0x520a840 is 0 bytes after a block of size 48 alloc'd
==1897==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1897==    by 0x401129: add_card_to (deck-c4.c:29)
==1897==    by 0x40325E: hand_from_string (input.c:49)
==1897==    by 0x4029DA: main (test-eval.c:111)
==1897== 
==1897== Invalid read of size 4
==1897==    at 0x401926: is_straight_at (eval.c:162)
==1897==    by 0x40269A: describe_hand (test-eval.c:49)
==1897==    by 0x402A60: main (test-eval.c:119)
==1897==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1897== 
==1897== 
==1897== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1897==  Access not within mapped region at address 0x0
==1897==    at 0x401926: is_straight_at (eval.c:162)
==1897==    by 0x40269A: describe_hand (test-eval.c:49)
==1897==    by 0x402A60: main (test-eval.c:119)
==1897==  If you believe this happened as a result of a stack
==1897==  overflow in your program's main thread (unlikely but
==1897==  possible), you can try to increase the size of the
==1897==  main thread stack using the --main-stacksize= flag.
==1897==  The main thread stack size used in this run was 8388608.
==1897== 
==1897== HEAP SUMMARY:
==1897==     in use at exit: 896 bytes in 18 blocks
==1897==   total heap usage: 206 allocs, 188 frees, 12,592 bytes allocated
==1897== 
==1897== LEAK SUMMARY:
==1897==    definitely lost: 0 bytes in 0 blocks
==1897==    indirectly lost: 0 bytes in 0 blocks
==1897==      possibly lost: 0 bytes in 0 blocks
==1897==    still reachable: 896 bytes in 18 blocks
==1897==         suppressed: 0 bytes in 0 blocks
==1897== Rerun with --leak-check=full to see details of leaked memory
==1897== 
==1897== For counts of detected and suppressed errors, rerun with: -v
==1897== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
Valgrind returned an error status
==1902== Memcheck, a memory error detector
==1902== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1902== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1902== Command: ./test-eval inp.9.txt
==1902== Parent PID: 1901
==1902== 
==1902== Invalid read of size 8
==1902==    at 0x401923: is_straight_at (eval.c:162)
==1902==    by 0x402663: describe_hand (test-eval.c:46)
==1902==    by 0x402A40: main (test-eval.c:116)
==1902==  Address 0x5208dd8 is 0 bytes after a block of size 56 alloc'd
==1902==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1902==    by 0x401129: add_card_to (deck-c4.c:29)
==1902==    by 0x40325E: hand_from_string (input.c:49)
==1902==    by 0x4029C5: main (test-eval.c:110)
==1902== 
==1902== Invalid read of size 4
==1902==    at 0x401926: is_straight_at (eval.c:162)
==1902==    by 0x402663: describe_hand (test-eval.c:46)
==1902==    by 0x402A40: main (test-eval.c:116)
==1902==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1902== 
==1902== 
==1902== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1902==  Access not within mapped region at address 0x0
==1902==    at 0x401926: is_straight_at (eval.c:162)
==1902==    by 0x402663: describe_hand (test-eval.c:46)
==1902==    by 0x402A40: main (test-eval.c:116)
==1902==  If you believe this happened as a result of a stack
==1902==  overflow in your program's main thread (unlikely but
==1902==  possible), you can try to increase the size of the
==1902==  main thread stack using the --main-stacksize= flag.
==1902==  The main thread stack size used in this run was 8388608.
==1902== 
==1902== HEAP SUMMARY:
==1902==     in use at exit: 928 bytes in 20 blocks
==1902==   total heap usage: 142 allocs, 122 frees, 11,440 bytes allocated
==1902== 
==1902== LEAK SUMMARY:
==1902==    definitely lost: 0 bytes in 0 blocks
==1902==    indirectly lost: 0 bytes in 0 blocks
==1902==      possibly lost: 0 bytes in 0 blocks
==1902==    still reachable: 928 bytes in 20 blocks
==1902==         suppressed: 0 bytes in 0 blocks
==1902== Rerun with --leak-check=full to see details of leaked memory
==1902== 
==1902== For counts of detected and suppressed errors, rerun with: -v
==1902== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 10: Trying each type of hand ranking
 Checking the output 
Your file matched the expected output
 - Testcase passed

Overall Grade: C

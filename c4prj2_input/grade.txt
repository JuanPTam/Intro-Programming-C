Grading at Sun Aug  4 21:41:40 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==1031== Memcheck, a memory error detector
==1031== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1031== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1031== Command: ./tester hands.txt draw.txt
==1031== Parent PID: 1030
==1031== 
==1031== Invalid write of size 8
==1031==    at 0x400D1C: read_input (in /graderhome/work/c4prj2_input/tester)
==1031==    by 0x401C89: main (test-input.c:69)
==1031==  Address 0x52042b0 is 0 bytes after a block of size 0 alloc'd
==1031==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1031==    by 0x400CB1: read_input (in /graderhome/work/c4prj2_input/tester)
==1031==    by 0x401C89: main (test-input.c:69)
==1031== 
==1031== 
==1031== HEAP SUMMARY:
==1031==     in use at exit: 128 bytes in 9 blocks
==1031==   total heap usage: 27 allocs, 18 frees, 13,968 bytes allocated
==1031== 
==1031== LEAK SUMMARY:
==1031==    definitely lost: 16 bytes in 1 blocks
==1031==    indirectly lost: 112 bytes in 8 blocks
==1031==      possibly lost: 0 bytes in 0 blocks
==1031==    still reachable: 0 bytes in 0 blocks
==1031==         suppressed: 0 bytes in 0 blocks
==1031== Rerun with --leak-check=full to see details of leaked memory
==1031== 
==1031== For counts of detected and suppressed errors, rerun with: -v
==1031== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==1036== Memcheck, a memory error detector
==1036== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1036== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1036== Command: ./tester hands.txt draw.txt
==1036== Parent PID: 1035
==1036== 
==1036== Invalid write of size 8
==1036==    at 0x400D1C: read_input (in /graderhome/work/c4prj2_input/tester)
==1036==    by 0x401C89: main (test-input.c:69)
==1036==  Address 0x52042b0 is 0 bytes after a block of size 0 alloc'd
==1036==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1036==    by 0x400CB1: read_input (in /graderhome/work/c4prj2_input/tester)
==1036==    by 0x401C89: main (test-input.c:69)
==1036== 
==1036== 
==1036== HEAP SUMMARY:
==1036==     in use at exit: 512 bytes in 36 blocks
==1036==   total heap usage: 72 allocs, 36 frees, 14,856 bytes allocated
==1036== 
==1036== LEAK SUMMARY:
==1036==    definitely lost: 64 bytes in 4 blocks
==1036==    indirectly lost: 448 bytes in 32 blocks
==1036==      possibly lost: 0 bytes in 0 blocks
==1036==    still reachable: 0 bytes in 0 blocks
==1036==         suppressed: 0 bytes in 0 blocks
==1036== Rerun with --leak-check=full to see details of leaked memory
==1036== 
==1036== For counts of detected and suppressed errors, rerun with: -v
==1036== ERROR SUMMARY: 4 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1042== Memcheck, a memory error detector
==1042== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1042== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1042== Command: ./tester h.txt d.txt
==1042== Parent PID: 1041
==1042== 
==1042== Invalid read of size 8
==1042==    at 0x400E16: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1042==    by 0x400C0D: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1042==    by 0x400D1B: read_input (in /graderhome/work/c4prj2_input/tester)
==1042==    by 0x401C89: main (test-input.c:69)
==1042==  Address 0xfffffffffffffff8 is not stack'd, malloc'd or (recently) free'd
==1042== 
==1042== 
==1042== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1042==  Access not within mapped region at address 0xFFFFFFFFFFFFFFF8
==1042==    at 0x400E16: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1042==    by 0x400C0D: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1042==    by 0x400D1B: read_input (in /graderhome/work/c4prj2_input/tester)
==1042==    by 0x401C89: main (test-input.c:69)
==1042==  If you believe this happened as a result of a stack
==1042==  overflow in your program's main thread (unlikely but
==1042==  possible), you can try to increase the size of the
==1042==  main thread stack using the --main-stacksize= flag.
==1042==  The main thread stack size used in this run was 8388608.
==1042== 
==1042== HEAP SUMMARY:
==1042==     in use at exit: 800 bytes in 12 blocks
==1042==   total heap usage: 19 allocs, 7 frees, 5,064 bytes allocated
==1042== 
==1042== LEAK SUMMARY:
==1042==    definitely lost: 0 bytes in 0 blocks
==1042==    indirectly lost: 0 bytes in 0 blocks
==1042==      possibly lost: 0 bytes in 0 blocks
==1042==    still reachable: 800 bytes in 12 blocks
==1042==         suppressed: 0 bytes in 0 blocks
==1042== Rerun with --leak-check=full to see details of leaked memory
==1042== 
==1042== For counts of detected and suppressed errors, rerun with: -v
==1042== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1048== Memcheck, a memory error detector
==1048== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1048== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1048== Command: ./tester i1 i2
==1048== Parent PID: 1047
==1048== 
==1048== Invalid read of size 8
==1048==    at 0x400E16: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1048==    by 0x400C0D: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1048==    by 0x400D1B: read_input (in /graderhome/work/c4prj2_input/tester)
==1048==    by 0x401C89: main (test-input.c:69)
==1048==  Address 0xfffffffffffffff8 is not stack'd, malloc'd or (recently) free'd
==1048== 
==1048== 
==1048== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1048==  Access not within mapped region at address 0xFFFFFFFFFFFFFFF8
==1048==    at 0x400E16: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1048==    by 0x400C0D: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1048==    by 0x400D1B: read_input (in /graderhome/work/c4prj2_input/tester)
==1048==    by 0x401C89: main (test-input.c:69)
==1048==  If you believe this happened as a result of a stack
==1048==  overflow in your program's main thread (unlikely but
==1048==  possible), you can try to increase the size of the
==1048==  main thread stack using the --main-stacksize= flag.
==1048==  The main thread stack size used in this run was 8388608.
==1048== 
==1048== HEAP SUMMARY:
==1048==     in use at exit: 752 bytes in 9 blocks
==1048==   total heap usage: 13 allocs, 4 frees, 4,896 bytes allocated
==1048== 
==1048== LEAK SUMMARY:
==1048==    definitely lost: 0 bytes in 0 blocks
==1048==    indirectly lost: 0 bytes in 0 blocks
==1048==      possibly lost: 0 bytes in 0 blocks
==1048==    still reachable: 752 bytes in 9 blocks
==1048==         suppressed: 0 bytes in 0 blocks
==1048== Rerun with --leak-check=full to see details of leaked memory
==1048== 
==1048== For counts of detected and suppressed errors, rerun with: -v
==1048== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
